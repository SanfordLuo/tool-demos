# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: music.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='music.proto',
  package='music',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0bmusic.proto\x12\x05music\"\x18\n\x08name_req\x12\x0c\n\x04name\x18\x01 \x01(\t\"L\n\nmusic_resp\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06singer\x18\x02 \x01(\t\x12\x0f\n\x07ranking\x18\x03 \x01(\x05\x12\x0f\n\x07message\x18\x04 \x01(\t\"\x1a\n\tlimit_req\x12\r\n\x05limit\x18\x01 \x01(\x05\"/\n\x0cranking_resp\x12\x1f\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x11.music.music_resp2v\n\x05Music\x12\x31\n\tget_music\x12\x0f.music.name_req\x1a\x11.music.music_resp\"\x00\x12:\n\rranking_music\x12\x10.music.limit_req\x1a\x13.music.ranking_resp\"\x00\x30\x01\x62\x06proto3'
)




_NAME_REQ = _descriptor.Descriptor(
  name='name_req',
  full_name='music.name_req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='music.name_req.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=46,
)


_MUSIC_RESP = _descriptor.Descriptor(
  name='music_resp',
  full_name='music.music_resp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='music.music_resp.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='singer', full_name='music.music_resp.singer', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ranking', full_name='music.music_resp.ranking', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='music.music_resp.message', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=48,
  serialized_end=124,
)


_LIMIT_REQ = _descriptor.Descriptor(
  name='limit_req',
  full_name='music.limit_req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='limit', full_name='music.limit_req.limit', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=126,
  serialized_end=152,
)


_RANKING_RESP = _descriptor.Descriptor(
  name='ranking_resp',
  full_name='music.ranking_resp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='music.ranking_resp.data', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=154,
  serialized_end=201,
)

_RANKING_RESP.fields_by_name['data'].message_type = _MUSIC_RESP
DESCRIPTOR.message_types_by_name['name_req'] = _NAME_REQ
DESCRIPTOR.message_types_by_name['music_resp'] = _MUSIC_RESP
DESCRIPTOR.message_types_by_name['limit_req'] = _LIMIT_REQ
DESCRIPTOR.message_types_by_name['ranking_resp'] = _RANKING_RESP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

name_req = _reflection.GeneratedProtocolMessageType('name_req', (_message.Message,), {
  'DESCRIPTOR' : _NAME_REQ,
  '__module__' : 'music_pb2'
  # @@protoc_insertion_point(class_scope:music.name_req)
  })
_sym_db.RegisterMessage(name_req)

music_resp = _reflection.GeneratedProtocolMessageType('music_resp', (_message.Message,), {
  'DESCRIPTOR' : _MUSIC_RESP,
  '__module__' : 'music_pb2'
  # @@protoc_insertion_point(class_scope:music.music_resp)
  })
_sym_db.RegisterMessage(music_resp)

limit_req = _reflection.GeneratedProtocolMessageType('limit_req', (_message.Message,), {
  'DESCRIPTOR' : _LIMIT_REQ,
  '__module__' : 'music_pb2'
  # @@protoc_insertion_point(class_scope:music.limit_req)
  })
_sym_db.RegisterMessage(limit_req)

ranking_resp = _reflection.GeneratedProtocolMessageType('ranking_resp', (_message.Message,), {
  'DESCRIPTOR' : _RANKING_RESP,
  '__module__' : 'music_pb2'
  # @@protoc_insertion_point(class_scope:music.ranking_resp)
  })
_sym_db.RegisterMessage(ranking_resp)



_MUSIC = _descriptor.ServiceDescriptor(
  name='Music',
  full_name='music.Music',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=203,
  serialized_end=321,
  methods=[
  _descriptor.MethodDescriptor(
    name='get_music',
    full_name='music.Music.get_music',
    index=0,
    containing_service=None,
    input_type=_NAME_REQ,
    output_type=_MUSIC_RESP,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ranking_music',
    full_name='music.Music.ranking_music',
    index=1,
    containing_service=None,
    input_type=_LIMIT_REQ,
    output_type=_RANKING_RESP,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_MUSIC)

DESCRIPTOR.services_by_name['Music'] = _MUSIC

# @@protoc_insertion_point(module_scope)
